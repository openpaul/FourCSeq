% Generated by roxygen2 (4.0.2): do not edit by hand
\name{combineFragEnds}
\alias{combineFragEnds}
\title{Combine the counts of both fragment ends.}
\usage{
combineFragEnds(object, multFactor = 1, filter = FALSE)
}
\arguments{
\item{object}{A \code{FourC} object.}

\item{multFactor}{Multiplication factor that can be used to multiply the
counts of fragments which only have one valid end. Default is \code{1}.
\code{filter} is automatically set to \code{TRUE} if \code{multFactor}
is different from 1.}

\item{filter}{If filter is \code{TRUE}, only reads from valid fragment
ends are summed up for each fragment. This means if only one fragment end
is valid only counts from this end are considered.
If filter is \code{FALSE}, counts from both fragment ends are summed up
without any filtering.}
}
\value{
Returns an updated \code{FourC} object with a new assay \code{counts}
containing the combined count data of both fragment ends for all viewpoints.
}
\description{
\code{combineFragEnds} combines the counts of both fragment ends. A
multiplication factor can be used for fragments that only have counts for
one valid fragment end.
}
\examples{
data(fc, package="FourCSeq")

fc <- combineFragEnds(fc)
fc
}
\author{
Felix A. Klein, \email{felix.klein@embl.de}
}
\seealso{
\code{\link{FourC}}, \code{\link{countFragmentOverlaps}}
}

